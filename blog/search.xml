<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>vue生命周期是什么</title>
    <url>/blog/2020/01/12/1-lifecircle/</url>
    <content><![CDATA[<p>vue的生命周期是什么，如何产生，它有什么作用，如何使用</p>
<h2 id="vue生命周期是什么"><a href="#vue生命周期是什么" class="headerlink" title="vue生命周期是什么"></a>vue生命周期是什么</h2><p>我们通常认为生命周期是指一个事物从新生到死亡的过程，在vue中也是如此，在我们创建vue对象之时，生命周期便开始了，直到我们不再使用vue对象，生命周期也随之结束。</p>
<a id="more"></a>
<p>所有学习vue的人都一定见过来自官网的图示 ↓</p>
<p><img src="/blog/blog/2020/01/12/1-lifecircle/lifecycle.png" alt="lifecycle"></p>
<p>只看这张图，我们只能知道存在<strong>8个生命周期钩子</strong>，但作为初学者一定不懂为什么它们被称为“生命周期钩子”，这就需要我们来深入理解它们是怎么出现的。</p>
<h2 id="从vue源码理解生命周期"><a href="#从vue源码理解生命周期" class="headerlink" title="从vue源码理解生命周期"></a>从vue源码理解生命周期</h2><p>在vue源码中目录下找到src/core/index.js的入口文件，可以发现，创建vue对象可以说是一个复杂的过程。我们暂时不需要理解太多，但需要知道，<strong>在文件的最后一行导出了一个Vue</strong>，而这个Vue也就是我们在创建vue时实例化的对象。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'./instance/index'</span></span><br><span class="line">  <span class="comment">//more</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Vue</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="comment">// 选项</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>回到入口文件可以发现，导出的Vue来自于第一行所导入的文件，于是我们来到src/core/instance/index.js文件，再一次发现，<strong>原来Vue是通过传入options参数并初始化所得到的对象</strong>。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Vue</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//more</span></span><br><span class="line">  <span class="keyword">this</span>._init(options)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//more</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Vue</span><br></pre></td></tr></table></figure>

<p>再来看src/core/instance/init.js文件，_init方法绑定在Vue的原型上，创建对象则进行初始化。在_init方法中，<strong>传入的options参数作为一个对象需要完成很多的操作，而这些操作也就可以说是vue的生命周期。</strong></p>
<p>在一个生命周期中，有很多步骤，第一步要干什么，第二步要干什么……<strong>在Vue对象中，如果我们想要在某一个时刻做一些事情，就需要我们知道它执行到了什么阶段，而这个对象也就需要内部产生一个回调来告诉我们它已经到达了某一个阶段，可以进行一些其他的操作。</strong>这就是生命周期的意义。</p>
<p>从代码来看（以created为例）：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  created: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>created方法作为options参数被传入到_init方法中。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//more</span></span><br><span class="line">callHook(vm, <span class="string">'created'</span>)</span><br><span class="line"><span class="comment">//more</span></span><br></pre></td></tr></table></figure>

<p>在_init方法中，通过callHook方法接收到created参数，并执行相应操作。</p>
<p><strong>也就是说，callHook作为一个回调告诉我们，Vue对象已经执行到生命周期中created的阶段，通过我们人为地传入参数，可以在这个阶段开始我们需要完成的操作。</strong></p>
<h2 id="生命周期钩子"><a href="#生命周期钩子" class="headerlink" title="生命周期钩子"></a>生命周期钩子</h2><p>再看一下上面提到的callHook，hook即为钩子，所以可以看出来为什么生命周期内的有些函数被命名为“生命周期钩子”，这就表明，<strong>created作为传入的函数通过钩子可以进行回调</strong>，以实现一些操作。</p>
<p>简单来说，<strong>created，mounted这些生命周期钩子可以让我们参与到Vue对象的整个生命周期中并完成一系列操作。</strong></p>
<p>至于如何使用，可以查看<a href="https://vuejs.org/" target="_blank" rel="noopener">官方文档</a>。</p>
]]></content>
      <categories>
        <category>计算机</category>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/blog/2020/01/08/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
